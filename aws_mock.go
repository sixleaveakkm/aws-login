// Code generated by MockGen. DO NOT EDIT.
// Source: aws.go

// Package main is a generated GoMock package.
package main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAWS is a mock of AWS interface
type MockAWS struct {
	ctrl     *gomock.Controller
	recorder *MockAWSMockRecorder
}

// MockAWSMockRecorder is the mock recorder for MockAWS
type MockAWSMockRecorder struct {
	mock *MockAWS
}

// NewMockAWS creates a new mock instance
func NewMockAWS(ctrl *gomock.Controller) *MockAWS {
	mock := &MockAWS{ctrl: ctrl}
	mock.recorder = &MockAWSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAWS) EXPECT() *MockAWSMockRecorder {
	return m.recorder
}

// GetMFAString mocks base method
func (m *MockAWS) GetMFAString(profile string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMFAString", profile)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetMFAString indicates an expected call of GetMFAString
func (mr *MockAWSMockRecorder) GetMFAString(profile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMFAString", reflect.TypeOf((*MockAWS)(nil).GetMFAString), profile)
}

// GetMFASession mocks base method
func (m *MockAWS) GetMFASession(input *GetMFASessionInput) (*SessionCredential, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMFASession", input)
	ret0, _ := ret[0].(*SessionCredential)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMFASession indicates an expected call of GetMFASession
func (mr *MockAWSMockRecorder) GetMFASession(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMFASession", reflect.TypeOf((*MockAWS)(nil).GetMFASession), input)
}

// GetAssumeRoleSession mocks base method
func (m *MockAWS) GetAssumeRoleSession(input *GetAssumeRoleRoleInput) (*SessionCredential, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAssumeRoleSession", input)
	ret0, _ := ret[0].(*SessionCredential)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAssumeRoleSession indicates an expected call of GetAssumeRoleSession
func (mr *MockAWSMockRecorder) GetAssumeRoleSession(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAssumeRoleSession", reflect.TypeOf((*MockAWS)(nil).GetAssumeRoleSession), input)
}
